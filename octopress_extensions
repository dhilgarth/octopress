require "stringex"

## -- Config -- ##
source_dir              = "source"    # source file directory
posts_submodule_root    = "_posts"    # directory the posts submodule is registered at

task :pull_posts do
  
  cd "#{source_dir}/#{posts_submodule_root}" do
    status = `git status --porcelain`;
    puts status
    unless status.empty?
      abort("rake aborted") if ask("You have uncommitted changes. Are you sure you want to discard them?", ['y', 'n']) == 'n'
      system "git reset --hard"
      system "git clean -fd"
    end
    system "git checkout blog"
    system "git pull"
  end
  system "git add #{source_dir}/#{posts_submodule_root}"
  system "git commit -m \"Update posts\""
end

def get_stdin(message)
  print message
  STDIN.gets.chomp
end

def ask(message, valid_options)
  if valid_options
    answer = get_stdin("#{message} #{valid_options.to_s.gsub(/"/, '').gsub(/, /,'/')} ") while !valid_options.include?(answer)
  else
    answer = get_stdin(message)
  end
  answer
end
